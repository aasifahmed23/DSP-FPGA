-- -------------------------------------------------------------
--
-- Module: Hd
-- Generated by MATLAB(R) 8.5 and the Filter Design HDL Coder 2.9.7.
-- Generated on: 2024-07-04 07:19:18
-- Basic FIR Design
--
-- -------------------------------------------------------------

-- -------------------------------------------------------------
-- HDL Code Generation Options:
--
-- TargetLanguage: VHDL
-- FIRAdderStyle: tree
-- AddInputRegister: off
-- InputPort: data_in
-- OutputPort: data_out
-- Name: Hd
-- UserComment:  User data, length 16
-- TestBenchName: basic_filter_tb
-- TestBenchStimulus: impulse step ramp chirp noise 

-- -------------------------------------------------------------
-- HDL Implementation    : Fully parallel
-- Multipliers           : 51
-- Folding Factor        : 1
-- -------------------------------------------------------------
-- Filter Settings:
--
-- Discrete-Time FIR Filter (real)
-- -------------------------------
-- Filter Structure  : Direct-Form FIR
-- Filter Length     : 51
-- Stable            : Yes
-- Linear Phase      : Yes (Type 1)
-- Arithmetic        : fixed
-- Numerator         : s16,16 -> [-5.000000e-01 5.000000e-01)
-- Input             : s16,15 -> [-1 1)
-- Filter Internals  : Specify Precision
--   Output          : s16,31 -> [-1.525879e-05 1.525879e-05)
--   Product         : s31,31 -> [-5.000000e-01 5.000000e-01)
--   Accumulator     : s40,31 -> [-256 256)
--   Round Mode      : floor
--   Overflow Mode   : saturate
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.all;
USE IEEE.numeric_std.ALL;

ENTITY Hd IS
   PORT( clk                             :   IN    std_logic; 
         clk_enable                      :   IN    std_logic; 
         reset                           :   IN    std_logic; 
         data_in                         :   IN    std_logic_vector(15 DOWNTO 0); -- sfix16_En15
         data_out                        :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En31
         );

END Hd;


----------------------------------------------------------------
--Module Architecture: Hd
----------------------------------------------------------------
ARCHITECTURE rtl OF Hd IS
  -- Local Functions
  -- Type Definitions
  TYPE delay_pipeline_type IS ARRAY (NATURAL range <>) OF signed(15 DOWNTO 0); -- sfix16_En15
  -- Constants
  CONSTANT coeff1                         : signed(15 DOWNTO 0) := to_signed(-60, 16); -- sfix16_En16
  CONSTANT coeff2                         : signed(15 DOWNTO 0) := to_signed(-180, 16); -- sfix16_En16
  CONSTANT coeff3                         : signed(15 DOWNTO 0) := to_signed(-167, 16); -- sfix16_En16
  CONSTANT coeff4                         : signed(15 DOWNTO 0) := to_signed(233, 16); -- sfix16_En16
  CONSTANT coeff5                         : signed(15 DOWNTO 0) := to_signed(888, 16); -- sfix16_En16
  CONSTANT coeff6                         : signed(15 DOWNTO 0) := to_signed(1135, 16); -- sfix16_En16
  CONSTANT coeff7                         : signed(15 DOWNTO 0) := to_signed(505, 16); -- sfix16_En16
  CONSTANT coeff8                         : signed(15 DOWNTO 0) := to_signed(-426, 16); -- sfix16_En16
  CONSTANT coeff9                         : signed(15 DOWNTO 0) := to_signed(-503, 16); -- sfix16_En16
  CONSTANT coeff10                        : signed(15 DOWNTO 0) := to_signed(399, 16); -- sfix16_En16
  CONSTANT coeff11                        : signed(15 DOWNTO 0) := to_signed(910, 16); -- sfix16_En16
  CONSTANT coeff12                        : signed(15 DOWNTO 0) := to_signed(26, 16); -- sfix16_En16
  CONSTANT coeff13                        : signed(15 DOWNTO 0) := to_signed(-1106, 16); -- sfix16_En16
  CONSTANT coeff14                        : signed(15 DOWNTO 0) := to_signed(-585, 16); -- sfix16_En16
  CONSTANT coeff15                        : signed(15 DOWNTO 0) := to_signed(1141, 16); -- sfix16_En16
  CONSTANT coeff16                        : signed(15 DOWNTO 0) := to_signed(1360, 16); -- sfix16_En16
  CONSTANT coeff17                        : signed(15 DOWNTO 0) := to_signed(-804, 16); -- sfix16_En16
  CONSTANT coeff18                        : signed(15 DOWNTO 0) := to_signed(-2244, 16); -- sfix16_En16
  CONSTANT coeff19                        : signed(15 DOWNTO 0) := to_signed(-70, 16); -- sfix16_En16
  CONSTANT coeff20                        : signed(15 DOWNTO 0) := to_signed(3131, 16); -- sfix16_En16
  CONSTANT coeff21                        : signed(15 DOWNTO 0) := to_signed(1795, 16); -- sfix16_En16
  CONSTANT coeff22                        : signed(15 DOWNTO 0) := to_signed(-3890, 16); -- sfix16_En16
  CONSTANT coeff23                        : signed(15 DOWNTO 0) := to_signed(-5395, 16); -- sfix16_En16
  CONSTANT coeff24                        : signed(15 DOWNTO 0) := to_signed(4401, 16); -- sfix16_En16
  CONSTANT coeff25                        : signed(15 DOWNTO 0) := to_signed(20318, 16); -- sfix16_En16
  CONSTANT coeff26                        : signed(15 DOWNTO 0) := to_signed(28186, 16); -- sfix16_En16
  CONSTANT coeff27                        : signed(15 DOWNTO 0) := to_signed(20318, 16); -- sfix16_En16
  CONSTANT coeff28                        : signed(15 DOWNTO 0) := to_signed(4401, 16); -- sfix16_En16
  CONSTANT coeff29                        : signed(15 DOWNTO 0) := to_signed(-5395, 16); -- sfix16_En16
  CONSTANT coeff30                        : signed(15 DOWNTO 0) := to_signed(-3890, 16); -- sfix16_En16
  CONSTANT coeff31                        : signed(15 DOWNTO 0) := to_signed(1795, 16); -- sfix16_En16
  CONSTANT coeff32                        : signed(15 DOWNTO 0) := to_signed(3131, 16); -- sfix16_En16
  CONSTANT coeff33                        : signed(15 DOWNTO 0) := to_signed(-70, 16); -- sfix16_En16
  CONSTANT coeff34                        : signed(15 DOWNTO 0) := to_signed(-2244, 16); -- sfix16_En16
  CONSTANT coeff35                        : signed(15 DOWNTO 0) := to_signed(-804, 16); -- sfix16_En16
  CONSTANT coeff36                        : signed(15 DOWNTO 0) := to_signed(1360, 16); -- sfix16_En16
  CONSTANT coeff37                        : signed(15 DOWNTO 0) := to_signed(1141, 16); -- sfix16_En16
  CONSTANT coeff38                        : signed(15 DOWNTO 0) := to_signed(-585, 16); -- sfix16_En16
  CONSTANT coeff39                        : signed(15 DOWNTO 0) := to_signed(-1106, 16); -- sfix16_En16
  CONSTANT coeff40                        : signed(15 DOWNTO 0) := to_signed(26, 16); -- sfix16_En16
  CONSTANT coeff41                        : signed(15 DOWNTO 0) := to_signed(910, 16); -- sfix16_En16
  CONSTANT coeff42                        : signed(15 DOWNTO 0) := to_signed(399, 16); -- sfix16_En16
  CONSTANT coeff43                        : signed(15 DOWNTO 0) := to_signed(-503, 16); -- sfix16_En16
  CONSTANT coeff44                        : signed(15 DOWNTO 0) := to_signed(-426, 16); -- sfix16_En16
  CONSTANT coeff45                        : signed(15 DOWNTO 0) := to_signed(505, 16); -- sfix16_En16
  CONSTANT coeff46                        : signed(15 DOWNTO 0) := to_signed(1135, 16); -- sfix16_En16
  CONSTANT coeff47                        : signed(15 DOWNTO 0) := to_signed(888, 16); -- sfix16_En16
  CONSTANT coeff48                        : signed(15 DOWNTO 0) := to_signed(233, 16); -- sfix16_En16
  CONSTANT coeff49                        : signed(15 DOWNTO 0) := to_signed(-167, 16); -- sfix16_En16
  CONSTANT coeff50                        : signed(15 DOWNTO 0) := to_signed(-180, 16); -- sfix16_En16
  CONSTANT coeff51                        : signed(15 DOWNTO 0) := to_signed(-60, 16); -- sfix16_En16

  -- Signals
  SIGNAL delay_pipeline                   : delay_pipeline_type(0 TO 49); -- sfix16_En15
  SIGNAL data_in_regtype                  : signed(15 DOWNTO 0); -- sfix16_En15
  SIGNAL product51                        : signed(30 DOWNTO 0); -- sfix31_En31
  SIGNAL mul_temp                         : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product50                        : signed(30 DOWNTO 0); -- sfix31_En31
  SIGNAL mul_temp_1                       : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product49                        : signed(30 DOWNTO 0); -- sfix31_En31
  SIGNAL mul_temp_2                       : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product48                        : signed(30 DOWNTO 0); -- sfix31_En31
  SIGNAL mul_temp_3                       : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product47                        : signed(30 DOWNTO 0); -- sfix31_En31
  SIGNAL mul_temp_4                       : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product46                        : signed(30 DOWNTO 0); -- sfix31_En31
  SIGNAL mul_temp_5                       : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product45                        : signed(30 DOWNTO 0); -- sfix31_En31
  SIGNAL mul_temp_6                       : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product44                        : signed(30 DOWNTO 0); -- sfix31_En31
  SIGNAL mul_temp_7                       : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product43                        : signed(30 DOWNTO 0); -- sfix31_En31
  SIGNAL mul_temp_8                       : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product42                        : signed(30 DOWNTO 0); -- sfix31_En31
  SIGNAL mul_temp_9                       : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product41                        : signed(30 DOWNTO 0); -- sfix31_En31
  SIGNAL mul_temp_10                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product40                        : signed(30 DOWNTO 0); -- sfix31_En31
  SIGNAL mul_temp_11                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product39                        : signed(30 DOWNTO 0); -- sfix31_En31
  SIGNAL mul_temp_12                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product38                        : signed(30 DOWNTO 0); -- sfix31_En31
  SIGNAL mul_temp_13                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product37                        : signed(30 DOWNTO 0); -- sfix31_En31
  SIGNAL mul_temp_14                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product36                        : signed(30 DOWNTO 0); -- sfix31_En31
  SIGNAL mul_temp_15                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product35                        : signed(30 DOWNTO 0); -- sfix31_En31
  SIGNAL mul_temp_16                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product34                        : signed(30 DOWNTO 0); -- sfix31_En31
  SIGNAL mul_temp_17                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product33                        : signed(30 DOWNTO 0); -- sfix31_En31
  SIGNAL mul_temp_18                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product32                        : signed(30 DOWNTO 0); -- sfix31_En31
  SIGNAL mul_temp_19                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product31                        : signed(30 DOWNTO 0); -- sfix31_En31
  SIGNAL mul_temp_20                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product30                        : signed(30 DOWNTO 0); -- sfix31_En31
  SIGNAL mul_temp_21                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product29                        : signed(30 DOWNTO 0); -- sfix31_En31
  SIGNAL mul_temp_22                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product28                        : signed(30 DOWNTO 0); -- sfix31_En31
  SIGNAL mul_temp_23                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product27                        : signed(30 DOWNTO 0); -- sfix31_En31
  SIGNAL mul_temp_24                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product26                        : signed(30 DOWNTO 0); -- sfix31_En31
  SIGNAL mul_temp_25                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product25                        : signed(30 DOWNTO 0); -- sfix31_En31
  SIGNAL mul_temp_26                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product24                        : signed(30 DOWNTO 0); -- sfix31_En31
  SIGNAL mul_temp_27                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product23                        : signed(30 DOWNTO 0); -- sfix31_En31
  SIGNAL mul_temp_28                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product22                        : signed(30 DOWNTO 0); -- sfix31_En31
  SIGNAL mul_temp_29                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product21                        : signed(30 DOWNTO 0); -- sfix31_En31
  SIGNAL mul_temp_30                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product20                        : signed(30 DOWNTO 0); -- sfix31_En31
  SIGNAL mul_temp_31                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product19                        : signed(30 DOWNTO 0); -- sfix31_En31
  SIGNAL mul_temp_32                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product18                        : signed(30 DOWNTO 0); -- sfix31_En31
  SIGNAL mul_temp_33                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product17                        : signed(30 DOWNTO 0); -- sfix31_En31
  SIGNAL mul_temp_34                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product16                        : signed(30 DOWNTO 0); -- sfix31_En31
  SIGNAL mul_temp_35                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product15                        : signed(30 DOWNTO 0); -- sfix31_En31
  SIGNAL mul_temp_36                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product14                        : signed(30 DOWNTO 0); -- sfix31_En31
  SIGNAL mul_temp_37                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product13                        : signed(30 DOWNTO 0); -- sfix31_En31
  SIGNAL mul_temp_38                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product12                        : signed(30 DOWNTO 0); -- sfix31_En31
  SIGNAL mul_temp_39                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product11                        : signed(30 DOWNTO 0); -- sfix31_En31
  SIGNAL mul_temp_40                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product10                        : signed(30 DOWNTO 0); -- sfix31_En31
  SIGNAL mul_temp_41                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product9                         : signed(30 DOWNTO 0); -- sfix31_En31
  SIGNAL mul_temp_42                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product8                         : signed(30 DOWNTO 0); -- sfix31_En31
  SIGNAL mul_temp_43                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product7                         : signed(30 DOWNTO 0); -- sfix31_En31
  SIGNAL mul_temp_44                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product6                         : signed(30 DOWNTO 0); -- sfix31_En31
  SIGNAL mul_temp_45                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product5                         : signed(30 DOWNTO 0); -- sfix31_En31
  SIGNAL mul_temp_46                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product4                         : signed(30 DOWNTO 0); -- sfix31_En31
  SIGNAL mul_temp_47                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product3                         : signed(30 DOWNTO 0); -- sfix31_En31
  SIGNAL mul_temp_48                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product2                         : signed(30 DOWNTO 0); -- sfix31_En31
  SIGNAL mul_temp_49                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL product1                         : signed(30 DOWNTO 0); -- sfix31_En31
  SIGNAL mul_temp_50                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL sum1_1                           : signed(39 DOWNTO 0); -- sfix40_En31
  SIGNAL add_temp                         : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL sum1_2                           : signed(39 DOWNTO 0); -- sfix40_En31
  SIGNAL add_temp_1                       : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL sum1_3                           : signed(39 DOWNTO 0); -- sfix40_En31
  SIGNAL add_temp_2                       : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL sum1_4                           : signed(39 DOWNTO 0); -- sfix40_En31
  SIGNAL add_temp_3                       : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL sum1_5                           : signed(39 DOWNTO 0); -- sfix40_En31
  SIGNAL add_temp_4                       : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL sum1_6                           : signed(39 DOWNTO 0); -- sfix40_En31
  SIGNAL add_temp_5                       : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL sum1_7                           : signed(39 DOWNTO 0); -- sfix40_En31
  SIGNAL add_temp_6                       : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL sum1_8                           : signed(39 DOWNTO 0); -- sfix40_En31
  SIGNAL add_temp_7                       : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL sum1_9                           : signed(39 DOWNTO 0); -- sfix40_En31
  SIGNAL add_temp_8                       : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL sum1_10                          : signed(39 DOWNTO 0); -- sfix40_En31
  SIGNAL add_temp_9                       : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL sum1_11                          : signed(39 DOWNTO 0); -- sfix40_En31
  SIGNAL add_temp_10                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL sum1_12                          : signed(39 DOWNTO 0); -- sfix40_En31
  SIGNAL add_temp_11                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL sum1_13                          : signed(39 DOWNTO 0); -- sfix40_En31
  SIGNAL add_temp_12                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL sum1_14                          : signed(39 DOWNTO 0); -- sfix40_En31
  SIGNAL add_temp_13                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL sum1_15                          : signed(39 DOWNTO 0); -- sfix40_En31
  SIGNAL add_temp_14                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL sum1_16                          : signed(39 DOWNTO 0); -- sfix40_En31
  SIGNAL add_temp_15                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL sum1_17                          : signed(39 DOWNTO 0); -- sfix40_En31
  SIGNAL add_temp_16                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL sum1_18                          : signed(39 DOWNTO 0); -- sfix40_En31
  SIGNAL add_temp_17                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL sum1_19                          : signed(39 DOWNTO 0); -- sfix40_En31
  SIGNAL add_temp_18                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL sum1_20                          : signed(39 DOWNTO 0); -- sfix40_En31
  SIGNAL add_temp_19                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL sum1_21                          : signed(39 DOWNTO 0); -- sfix40_En31
  SIGNAL add_temp_20                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL sum1_22                          : signed(39 DOWNTO 0); -- sfix40_En31
  SIGNAL add_temp_21                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL sum1_23                          : signed(39 DOWNTO 0); -- sfix40_En31
  SIGNAL add_temp_22                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL sum1_24                          : signed(39 DOWNTO 0); -- sfix40_En31
  SIGNAL add_temp_23                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL sum1_25                          : signed(39 DOWNTO 0); -- sfix40_En31
  SIGNAL add_temp_24                      : signed(31 DOWNTO 0); -- sfix32_En31
  SIGNAL sum2_1                           : signed(39 DOWNTO 0); -- sfix40_En31
  SIGNAL add_temp_25                      : signed(40 DOWNTO 0); -- sfix41_En31
  SIGNAL sum2_2                           : signed(39 DOWNTO 0); -- sfix40_En31
  SIGNAL add_temp_26                      : signed(40 DOWNTO 0); -- sfix41_En31
  SIGNAL sum2_3                           : signed(39 DOWNTO 0); -- sfix40_En31
  SIGNAL add_temp_27                      : signed(40 DOWNTO 0); -- sfix41_En31
  SIGNAL sum2_4                           : signed(39 DOWNTO 0); -- sfix40_En31
  SIGNAL add_temp_28                      : signed(40 DOWNTO 0); -- sfix41_En31
  SIGNAL sum2_5                           : signed(39 DOWNTO 0); -- sfix40_En31
  SIGNAL add_temp_29                      : signed(40 DOWNTO 0); -- sfix41_En31
  SIGNAL sum2_6                           : signed(39 DOWNTO 0); -- sfix40_En31
  SIGNAL add_temp_30                      : signed(40 DOWNTO 0); -- sfix41_En31
  SIGNAL sum2_7                           : signed(39 DOWNTO 0); -- sfix40_En31
  SIGNAL add_temp_31                      : signed(40 DOWNTO 0); -- sfix41_En31
  SIGNAL sum2_8                           : signed(39 DOWNTO 0); -- sfix40_En31
  SIGNAL add_temp_32                      : signed(40 DOWNTO 0); -- sfix41_En31
  SIGNAL sum2_9                           : signed(39 DOWNTO 0); -- sfix40_En31
  SIGNAL add_temp_33                      : signed(40 DOWNTO 0); -- sfix41_En31
  SIGNAL sum2_10                          : signed(39 DOWNTO 0); -- sfix40_En31
  SIGNAL add_temp_34                      : signed(40 DOWNTO 0); -- sfix41_En31
  SIGNAL sum2_11                          : signed(39 DOWNTO 0); -- sfix40_En31
  SIGNAL add_temp_35                      : signed(40 DOWNTO 0); -- sfix41_En31
  SIGNAL sum2_12                          : signed(39 DOWNTO 0); -- sfix40_En31
  SIGNAL add_temp_36                      : signed(40 DOWNTO 0); -- sfix41_En31
  SIGNAL sum2_13                          : signed(39 DOWNTO 0); -- sfix40_En31
  SIGNAL add_temp_37                      : signed(40 DOWNTO 0); -- sfix41_En31
  SIGNAL sum3_1                           : signed(39 DOWNTO 0); -- sfix40_En31
  SIGNAL add_temp_38                      : signed(40 DOWNTO 0); -- sfix41_En31
  SIGNAL sum3_2                           : signed(39 DOWNTO 0); -- sfix40_En31
  SIGNAL add_temp_39                      : signed(40 DOWNTO 0); -- sfix41_En31
  SIGNAL sum3_3                           : signed(39 DOWNTO 0); -- sfix40_En31
  SIGNAL add_temp_40                      : signed(40 DOWNTO 0); -- sfix41_En31
  SIGNAL sum3_4                           : signed(39 DOWNTO 0); -- sfix40_En31
  SIGNAL add_temp_41                      : signed(40 DOWNTO 0); -- sfix41_En31
  SIGNAL sum3_5                           : signed(39 DOWNTO 0); -- sfix40_En31
  SIGNAL add_temp_42                      : signed(40 DOWNTO 0); -- sfix41_En31
  SIGNAL sum3_6                           : signed(39 DOWNTO 0); -- sfix40_En31
  SIGNAL add_temp_43                      : signed(40 DOWNTO 0); -- sfix41_En31
  SIGNAL sum4_1                           : signed(39 DOWNTO 0); -- sfix40_En31
  SIGNAL add_temp_44                      : signed(40 DOWNTO 0); -- sfix41_En31
  SIGNAL sum4_2                           : signed(39 DOWNTO 0); -- sfix40_En31
  SIGNAL add_temp_45                      : signed(40 DOWNTO 0); -- sfix41_En31
  SIGNAL sum4_3                           : signed(39 DOWNTO 0); -- sfix40_En31
  SIGNAL add_temp_46                      : signed(40 DOWNTO 0); -- sfix41_En31
  SIGNAL sum5_1                           : signed(39 DOWNTO 0); -- sfix40_En31
  SIGNAL add_temp_47                      : signed(40 DOWNTO 0); -- sfix41_En31
  SIGNAL sum5_2                           : signed(39 DOWNTO 0); -- sfix40_En31
  SIGNAL add_temp_48                      : signed(40 DOWNTO 0); -- sfix41_En31
  SIGNAL sum6_1                           : signed(39 DOWNTO 0); -- sfix40_En31
  SIGNAL add_temp_49                      : signed(40 DOWNTO 0); -- sfix41_En31
  SIGNAL output_typeconvert               : signed(15 DOWNTO 0); -- sfix16_En31
  SIGNAL output_register                  : signed(15 DOWNTO 0); -- sfix16_En31


BEGIN

  -- Block Statements
  Delay_Pipeline_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      delay_pipeline(0 TO 49) <= (OTHERS => (OTHERS => '0'));
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline(0) <= signed(data_in);
        delay_pipeline(1 TO 49) <= delay_pipeline(0 TO 48);
      END IF;
    END IF; 
  END PROCESS Delay_Pipeline_process;

  data_in_regtype <= signed(data_in);

  mul_temp <= delay_pipeline(49) * coeff51;
  product51 <= (30 => '0', OTHERS => '1') WHEN mul_temp(31) = '0' AND mul_temp(30) /= '0'
      ELSE (30 => '1', OTHERS => '0') WHEN mul_temp(31) = '1' AND mul_temp(30) /= '1'
      ELSE (mul_temp(30 DOWNTO 0));

  mul_temp_1 <= delay_pipeline(48) * coeff50;
  product50 <= (30 => '0', OTHERS => '1') WHEN mul_temp_1(31) = '0' AND mul_temp_1(30) /= '0'
      ELSE (30 => '1', OTHERS => '0') WHEN mul_temp_1(31) = '1' AND mul_temp_1(30) /= '1'
      ELSE (mul_temp_1(30 DOWNTO 0));

  mul_temp_2 <= delay_pipeline(47) * coeff49;
  product49 <= (30 => '0', OTHERS => '1') WHEN mul_temp_2(31) = '0' AND mul_temp_2(30) /= '0'
      ELSE (30 => '1', OTHERS => '0') WHEN mul_temp_2(31) = '1' AND mul_temp_2(30) /= '1'
      ELSE (mul_temp_2(30 DOWNTO 0));

  mul_temp_3 <= delay_pipeline(46) * coeff48;
  product48 <= (30 => '0', OTHERS => '1') WHEN mul_temp_3(31) = '0' AND mul_temp_3(30) /= '0'
      ELSE (30 => '1', OTHERS => '0') WHEN mul_temp_3(31) = '1' AND mul_temp_3(30) /= '1'
      ELSE (mul_temp_3(30 DOWNTO 0));

  mul_temp_4 <= delay_pipeline(45) * coeff47;
  product47 <= (30 => '0', OTHERS => '1') WHEN mul_temp_4(31) = '0' AND mul_temp_4(30) /= '0'
      ELSE (30 => '1', OTHERS => '0') WHEN mul_temp_4(31) = '1' AND mul_temp_4(30) /= '1'
      ELSE (mul_temp_4(30 DOWNTO 0));

  mul_temp_5 <= delay_pipeline(44) * coeff46;
  product46 <= (30 => '0', OTHERS => '1') WHEN mul_temp_5(31) = '0' AND mul_temp_5(30) /= '0'
      ELSE (30 => '1', OTHERS => '0') WHEN mul_temp_5(31) = '1' AND mul_temp_5(30) /= '1'
      ELSE (mul_temp_5(30 DOWNTO 0));

  mul_temp_6 <= delay_pipeline(43) * coeff45;
  product45 <= (30 => '0', OTHERS => '1') WHEN mul_temp_6(31) = '0' AND mul_temp_6(30) /= '0'
      ELSE (30 => '1', OTHERS => '0') WHEN mul_temp_6(31) = '1' AND mul_temp_6(30) /= '1'
      ELSE (mul_temp_6(30 DOWNTO 0));

  mul_temp_7 <= delay_pipeline(42) * coeff44;
  product44 <= (30 => '0', OTHERS => '1') WHEN mul_temp_7(31) = '0' AND mul_temp_7(30) /= '0'
      ELSE (30 => '1', OTHERS => '0') WHEN mul_temp_7(31) = '1' AND mul_temp_7(30) /= '1'
      ELSE (mul_temp_7(30 DOWNTO 0));

  mul_temp_8 <= delay_pipeline(41) * coeff43;
  product43 <= (30 => '0', OTHERS => '1') WHEN mul_temp_8(31) = '0' AND mul_temp_8(30) /= '0'
      ELSE (30 => '1', OTHERS => '0') WHEN mul_temp_8(31) = '1' AND mul_temp_8(30) /= '1'
      ELSE (mul_temp_8(30 DOWNTO 0));

  mul_temp_9 <= delay_pipeline(40) * coeff42;
  product42 <= (30 => '0', OTHERS => '1') WHEN mul_temp_9(31) = '0' AND mul_temp_9(30) /= '0'
      ELSE (30 => '1', OTHERS => '0') WHEN mul_temp_9(31) = '1' AND mul_temp_9(30) /= '1'
      ELSE (mul_temp_9(30 DOWNTO 0));

  mul_temp_10 <= delay_pipeline(39) * coeff41;
  product41 <= (30 => '0', OTHERS => '1') WHEN mul_temp_10(31) = '0' AND mul_temp_10(30) /= '0'
      ELSE (30 => '1', OTHERS => '0') WHEN mul_temp_10(31) = '1' AND mul_temp_10(30) /= '1'
      ELSE (mul_temp_10(30 DOWNTO 0));

  mul_temp_11 <= delay_pipeline(38) * coeff40;
  product40 <= (30 => '0', OTHERS => '1') WHEN mul_temp_11(31) = '0' AND mul_temp_11(30) /= '0'
      ELSE (30 => '1', OTHERS => '0') WHEN mul_temp_11(31) = '1' AND mul_temp_11(30) /= '1'
      ELSE (mul_temp_11(30 DOWNTO 0));

  mul_temp_12 <= delay_pipeline(37) * coeff39;
  product39 <= (30 => '0', OTHERS => '1') WHEN mul_temp_12(31) = '0' AND mul_temp_12(30) /= '0'
      ELSE (30 => '1', OTHERS => '0') WHEN mul_temp_12(31) = '1' AND mul_temp_12(30) /= '1'
      ELSE (mul_temp_12(30 DOWNTO 0));

  mul_temp_13 <= delay_pipeline(36) * coeff38;
  product38 <= (30 => '0', OTHERS => '1') WHEN mul_temp_13(31) = '0' AND mul_temp_13(30) /= '0'
      ELSE (30 => '1', OTHERS => '0') WHEN mul_temp_13(31) = '1' AND mul_temp_13(30) /= '1'
      ELSE (mul_temp_13(30 DOWNTO 0));

  mul_temp_14 <= delay_pipeline(35) * coeff37;
  product37 <= (30 => '0', OTHERS => '1') WHEN mul_temp_14(31) = '0' AND mul_temp_14(30) /= '0'
      ELSE (30 => '1', OTHERS => '0') WHEN mul_temp_14(31) = '1' AND mul_temp_14(30) /= '1'
      ELSE (mul_temp_14(30 DOWNTO 0));

  mul_temp_15 <= delay_pipeline(34) * coeff36;
  product36 <= (30 => '0', OTHERS => '1') WHEN mul_temp_15(31) = '0' AND mul_temp_15(30) /= '0'
      ELSE (30 => '1', OTHERS => '0') WHEN mul_temp_15(31) = '1' AND mul_temp_15(30) /= '1'
      ELSE (mul_temp_15(30 DOWNTO 0));

  mul_temp_16 <= delay_pipeline(33) * coeff35;
  product35 <= (30 => '0', OTHERS => '1') WHEN mul_temp_16(31) = '0' AND mul_temp_16(30) /= '0'
      ELSE (30 => '1', OTHERS => '0') WHEN mul_temp_16(31) = '1' AND mul_temp_16(30) /= '1'
      ELSE (mul_temp_16(30 DOWNTO 0));

  mul_temp_17 <= delay_pipeline(32) * coeff34;
  product34 <= (30 => '0', OTHERS => '1') WHEN mul_temp_17(31) = '0' AND mul_temp_17(30) /= '0'
      ELSE (30 => '1', OTHERS => '0') WHEN mul_temp_17(31) = '1' AND mul_temp_17(30) /= '1'
      ELSE (mul_temp_17(30 DOWNTO 0));

  mul_temp_18 <= delay_pipeline(31) * coeff33;
  product33 <= (30 => '0', OTHERS => '1') WHEN mul_temp_18(31) = '0' AND mul_temp_18(30) /= '0'
      ELSE (30 => '1', OTHERS => '0') WHEN mul_temp_18(31) = '1' AND mul_temp_18(30) /= '1'
      ELSE (mul_temp_18(30 DOWNTO 0));

  mul_temp_19 <= delay_pipeline(30) * coeff32;
  product32 <= (30 => '0', OTHERS => '1') WHEN mul_temp_19(31) = '0' AND mul_temp_19(30) /= '0'
      ELSE (30 => '1', OTHERS => '0') WHEN mul_temp_19(31) = '1' AND mul_temp_19(30) /= '1'
      ELSE (mul_temp_19(30 DOWNTO 0));

  mul_temp_20 <= delay_pipeline(29) * coeff31;
  product31 <= (30 => '0', OTHERS => '1') WHEN mul_temp_20(31) = '0' AND mul_temp_20(30) /= '0'
      ELSE (30 => '1', OTHERS => '0') WHEN mul_temp_20(31) = '1' AND mul_temp_20(30) /= '1'
      ELSE (mul_temp_20(30 DOWNTO 0));

  mul_temp_21 <= delay_pipeline(28) * coeff30;
  product30 <= (30 => '0', OTHERS => '1') WHEN mul_temp_21(31) = '0' AND mul_temp_21(30) /= '0'
      ELSE (30 => '1', OTHERS => '0') WHEN mul_temp_21(31) = '1' AND mul_temp_21(30) /= '1'
      ELSE (mul_temp_21(30 DOWNTO 0));

  mul_temp_22 <= delay_pipeline(27) * coeff29;
  product29 <= (30 => '0', OTHERS => '1') WHEN mul_temp_22(31) = '0' AND mul_temp_22(30) /= '0'
      ELSE (30 => '1', OTHERS => '0') WHEN mul_temp_22(31) = '1' AND mul_temp_22(30) /= '1'
      ELSE (mul_temp_22(30 DOWNTO 0));

  mul_temp_23 <= delay_pipeline(26) * coeff28;
  product28 <= (30 => '0', OTHERS => '1') WHEN mul_temp_23(31) = '0' AND mul_temp_23(30) /= '0'
      ELSE (30 => '1', OTHERS => '0') WHEN mul_temp_23(31) = '1' AND mul_temp_23(30) /= '1'
      ELSE (mul_temp_23(30 DOWNTO 0));

  mul_temp_24 <= delay_pipeline(25) * coeff27;
  product27 <= (30 => '0', OTHERS => '1') WHEN mul_temp_24(31) = '0' AND mul_temp_24(30) /= '0'
      ELSE (30 => '1', OTHERS => '0') WHEN mul_temp_24(31) = '1' AND mul_temp_24(30) /= '1'
      ELSE (mul_temp_24(30 DOWNTO 0));

  mul_temp_25 <= delay_pipeline(24) * coeff26;
  product26 <= (30 => '0', OTHERS => '1') WHEN mul_temp_25(31) = '0' AND mul_temp_25(30) /= '0'
      ELSE (30 => '1', OTHERS => '0') WHEN mul_temp_25(31) = '1' AND mul_temp_25(30) /= '1'
      ELSE (mul_temp_25(30 DOWNTO 0));

  mul_temp_26 <= delay_pipeline(23) * coeff25;
  product25 <= (30 => '0', OTHERS => '1') WHEN mul_temp_26(31) = '0' AND mul_temp_26(30) /= '0'
      ELSE (30 => '1', OTHERS => '0') WHEN mul_temp_26(31) = '1' AND mul_temp_26(30) /= '1'
      ELSE (mul_temp_26(30 DOWNTO 0));

  mul_temp_27 <= delay_pipeline(22) * coeff24;
  product24 <= (30 => '0', OTHERS => '1') WHEN mul_temp_27(31) = '0' AND mul_temp_27(30) /= '0'
      ELSE (30 => '1', OTHERS => '0') WHEN mul_temp_27(31) = '1' AND mul_temp_27(30) /= '1'
      ELSE (mul_temp_27(30 DOWNTO 0));

  mul_temp_28 <= delay_pipeline(21) * coeff23;
  product23 <= (30 => '0', OTHERS => '1') WHEN mul_temp_28(31) = '0' AND mul_temp_28(30) /= '0'
      ELSE (30 => '1', OTHERS => '0') WHEN mul_temp_28(31) = '1' AND mul_temp_28(30) /= '1'
      ELSE (mul_temp_28(30 DOWNTO 0));

  mul_temp_29 <= delay_pipeline(20) * coeff22;
  product22 <= (30 => '0', OTHERS => '1') WHEN mul_temp_29(31) = '0' AND mul_temp_29(30) /= '0'
      ELSE (30 => '1', OTHERS => '0') WHEN mul_temp_29(31) = '1' AND mul_temp_29(30) /= '1'
      ELSE (mul_temp_29(30 DOWNTO 0));

  mul_temp_30 <= delay_pipeline(19) * coeff21;
  product21 <= (30 => '0', OTHERS => '1') WHEN mul_temp_30(31) = '0' AND mul_temp_30(30) /= '0'
      ELSE (30 => '1', OTHERS => '0') WHEN mul_temp_30(31) = '1' AND mul_temp_30(30) /= '1'
      ELSE (mul_temp_30(30 DOWNTO 0));

  mul_temp_31 <= delay_pipeline(18) * coeff20;
  product20 <= (30 => '0', OTHERS => '1') WHEN mul_temp_31(31) = '0' AND mul_temp_31(30) /= '0'
      ELSE (30 => '1', OTHERS => '0') WHEN mul_temp_31(31) = '1' AND mul_temp_31(30) /= '1'
      ELSE (mul_temp_31(30 DOWNTO 0));

  mul_temp_32 <= delay_pipeline(17) * coeff19;
  product19 <= (30 => '0', OTHERS => '1') WHEN mul_temp_32(31) = '0' AND mul_temp_32(30) /= '0'
      ELSE (30 => '1', OTHERS => '0') WHEN mul_temp_32(31) = '1' AND mul_temp_32(30) /= '1'
      ELSE (mul_temp_32(30 DOWNTO 0));

  mul_temp_33 <= delay_pipeline(16) * coeff18;
  product18 <= (30 => '0', OTHERS => '1') WHEN mul_temp_33(31) = '0' AND mul_temp_33(30) /= '0'
      ELSE (30 => '1', OTHERS => '0') WHEN mul_temp_33(31) = '1' AND mul_temp_33(30) /= '1'
      ELSE (mul_temp_33(30 DOWNTO 0));

  mul_temp_34 <= delay_pipeline(15) * coeff17;
  product17 <= (30 => '0', OTHERS => '1') WHEN mul_temp_34(31) = '0' AND mul_temp_34(30) /= '0'
      ELSE (30 => '1', OTHERS => '0') WHEN mul_temp_34(31) = '1' AND mul_temp_34(30) /= '1'
      ELSE (mul_temp_34(30 DOWNTO 0));

  mul_temp_35 <= delay_pipeline(14) * coeff16;
  product16 <= (30 => '0', OTHERS => '1') WHEN mul_temp_35(31) = '0' AND mul_temp_35(30) /= '0'
      ELSE (30 => '1', OTHERS => '0') WHEN mul_temp_35(31) = '1' AND mul_temp_35(30) /= '1'
      ELSE (mul_temp_35(30 DOWNTO 0));

  mul_temp_36 <= delay_pipeline(13) * coeff15;
  product15 <= (30 => '0', OTHERS => '1') WHEN mul_temp_36(31) = '0' AND mul_temp_36(30) /= '0'
      ELSE (30 => '1', OTHERS => '0') WHEN mul_temp_36(31) = '1' AND mul_temp_36(30) /= '1'
      ELSE (mul_temp_36(30 DOWNTO 0));

  mul_temp_37 <= delay_pipeline(12) * coeff14;
  product14 <= (30 => '0', OTHERS => '1') WHEN mul_temp_37(31) = '0' AND mul_temp_37(30) /= '0'
      ELSE (30 => '1', OTHERS => '0') WHEN mul_temp_37(31) = '1' AND mul_temp_37(30) /= '1'
      ELSE (mul_temp_37(30 DOWNTO 0));

  mul_temp_38 <= delay_pipeline(11) * coeff13;
  product13 <= (30 => '0', OTHERS => '1') WHEN mul_temp_38(31) = '0' AND mul_temp_38(30) /= '0'
      ELSE (30 => '1', OTHERS => '0') WHEN mul_temp_38(31) = '1' AND mul_temp_38(30) /= '1'
      ELSE (mul_temp_38(30 DOWNTO 0));

  mul_temp_39 <= delay_pipeline(10) * coeff12;
  product12 <= (30 => '0', OTHERS => '1') WHEN mul_temp_39(31) = '0' AND mul_temp_39(30) /= '0'
      ELSE (30 => '1', OTHERS => '0') WHEN mul_temp_39(31) = '1' AND mul_temp_39(30) /= '1'
      ELSE (mul_temp_39(30 DOWNTO 0));

  mul_temp_40 <= delay_pipeline(9) * coeff11;
  product11 <= (30 => '0', OTHERS => '1') WHEN mul_temp_40(31) = '0' AND mul_temp_40(30) /= '0'
      ELSE (30 => '1', OTHERS => '0') WHEN mul_temp_40(31) = '1' AND mul_temp_40(30) /= '1'
      ELSE (mul_temp_40(30 DOWNTO 0));

  mul_temp_41 <= delay_pipeline(8) * coeff10;
  product10 <= (30 => '0', OTHERS => '1') WHEN mul_temp_41(31) = '0' AND mul_temp_41(30) /= '0'
      ELSE (30 => '1', OTHERS => '0') WHEN mul_temp_41(31) = '1' AND mul_temp_41(30) /= '1'
      ELSE (mul_temp_41(30 DOWNTO 0));

  mul_temp_42 <= delay_pipeline(7) * coeff9;
  product9 <= (30 => '0', OTHERS => '1') WHEN mul_temp_42(31) = '0' AND mul_temp_42(30) /= '0'
      ELSE (30 => '1', OTHERS => '0') WHEN mul_temp_42(31) = '1' AND mul_temp_42(30) /= '1'
      ELSE (mul_temp_42(30 DOWNTO 0));

  mul_temp_43 <= delay_pipeline(6) * coeff8;
  product8 <= (30 => '0', OTHERS => '1') WHEN mul_temp_43(31) = '0' AND mul_temp_43(30) /= '0'
      ELSE (30 => '1', OTHERS => '0') WHEN mul_temp_43(31) = '1' AND mul_temp_43(30) /= '1'
      ELSE (mul_temp_43(30 DOWNTO 0));

  mul_temp_44 <= delay_pipeline(5) * coeff7;
  product7 <= (30 => '0', OTHERS => '1') WHEN mul_temp_44(31) = '0' AND mul_temp_44(30) /= '0'
      ELSE (30 => '1', OTHERS => '0') WHEN mul_temp_44(31) = '1' AND mul_temp_44(30) /= '1'
      ELSE (mul_temp_44(30 DOWNTO 0));

  mul_temp_45 <= delay_pipeline(4) * coeff6;
  product6 <= (30 => '0', OTHERS => '1') WHEN mul_temp_45(31) = '0' AND mul_temp_45(30) /= '0'
      ELSE (30 => '1', OTHERS => '0') WHEN mul_temp_45(31) = '1' AND mul_temp_45(30) /= '1'
      ELSE (mul_temp_45(30 DOWNTO 0));

  mul_temp_46 <= delay_pipeline(3) * coeff5;
  product5 <= (30 => '0', OTHERS => '1') WHEN mul_temp_46(31) = '0' AND mul_temp_46(30) /= '0'
      ELSE (30 => '1', OTHERS => '0') WHEN mul_temp_46(31) = '1' AND mul_temp_46(30) /= '1'
      ELSE (mul_temp_46(30 DOWNTO 0));

  mul_temp_47 <= delay_pipeline(2) * coeff4;
  product4 <= (30 => '0', OTHERS => '1') WHEN mul_temp_47(31) = '0' AND mul_temp_47(30) /= '0'
      ELSE (30 => '1', OTHERS => '0') WHEN mul_temp_47(31) = '1' AND mul_temp_47(30) /= '1'
      ELSE (mul_temp_47(30 DOWNTO 0));

  mul_temp_48 <= delay_pipeline(1) * coeff3;
  product3 <= (30 => '0', OTHERS => '1') WHEN mul_temp_48(31) = '0' AND mul_temp_48(30) /= '0'
      ELSE (30 => '1', OTHERS => '0') WHEN mul_temp_48(31) = '1' AND mul_temp_48(30) /= '1'
      ELSE (mul_temp_48(30 DOWNTO 0));

  mul_temp_49 <= delay_pipeline(0) * coeff2;
  product2 <= (30 => '0', OTHERS => '1') WHEN mul_temp_49(31) = '0' AND mul_temp_49(30) /= '0'
      ELSE (30 => '1', OTHERS => '0') WHEN mul_temp_49(31) = '1' AND mul_temp_49(30) /= '1'
      ELSE (mul_temp_49(30 DOWNTO 0));

  mul_temp_50 <= data_in_regtype * coeff1;
  product1 <= (30 => '0', OTHERS => '1') WHEN mul_temp_50(31) = '0' AND mul_temp_50(30) /= '0'
      ELSE (30 => '1', OTHERS => '0') WHEN mul_temp_50(31) = '1' AND mul_temp_50(30) /= '1'
      ELSE (mul_temp_50(30 DOWNTO 0));

  add_temp <= resize(product51, 32) + resize(product50, 32);
  sum1_1 <= resize(add_temp, 40);

  add_temp_1 <= resize(product49, 32) + resize(product48, 32);
  sum1_2 <= resize(add_temp_1, 40);

  add_temp_2 <= resize(product47, 32) + resize(product46, 32);
  sum1_3 <= resize(add_temp_2, 40);

  add_temp_3 <= resize(product45, 32) + resize(product44, 32);
  sum1_4 <= resize(add_temp_3, 40);

  add_temp_4 <= resize(product43, 32) + resize(product42, 32);
  sum1_5 <= resize(add_temp_4, 40);

  add_temp_5 <= resize(product41, 32) + resize(product40, 32);
  sum1_6 <= resize(add_temp_5, 40);

  add_temp_6 <= resize(product39, 32) + resize(product38, 32);
  sum1_7 <= resize(add_temp_6, 40);

  add_temp_7 <= resize(product37, 32) + resize(product36, 32);
  sum1_8 <= resize(add_temp_7, 40);

  add_temp_8 <= resize(product35, 32) + resize(product34, 32);
  sum1_9 <= resize(add_temp_8, 40);

  add_temp_9 <= resize(product33, 32) + resize(product32, 32);
  sum1_10 <= resize(add_temp_9, 40);

  add_temp_10 <= resize(product31, 32) + resize(product30, 32);
  sum1_11 <= resize(add_temp_10, 40);

  add_temp_11 <= resize(product29, 32) + resize(product28, 32);
  sum1_12 <= resize(add_temp_11, 40);

  add_temp_12 <= resize(product27, 32) + resize(product26, 32);
  sum1_13 <= resize(add_temp_12, 40);

  add_temp_13 <= resize(product25, 32) + resize(product24, 32);
  sum1_14 <= resize(add_temp_13, 40);

  add_temp_14 <= resize(product23, 32) + resize(product22, 32);
  sum1_15 <= resize(add_temp_14, 40);

  add_temp_15 <= resize(product21, 32) + resize(product20, 32);
  sum1_16 <= resize(add_temp_15, 40);

  add_temp_16 <= resize(product19, 32) + resize(product18, 32);
  sum1_17 <= resize(add_temp_16, 40);

  add_temp_17 <= resize(product17, 32) + resize(product16, 32);
  sum1_18 <= resize(add_temp_17, 40);

  add_temp_18 <= resize(product15, 32) + resize(product14, 32);
  sum1_19 <= resize(add_temp_18, 40);

  add_temp_19 <= resize(product13, 32) + resize(product12, 32);
  sum1_20 <= resize(add_temp_19, 40);

  add_temp_20 <= resize(product11, 32) + resize(product10, 32);
  sum1_21 <= resize(add_temp_20, 40);

  add_temp_21 <= resize(product9, 32) + resize(product8, 32);
  sum1_22 <= resize(add_temp_21, 40);

  add_temp_22 <= resize(product7, 32) + resize(product6, 32);
  sum1_23 <= resize(add_temp_22, 40);

  add_temp_23 <= resize(product5, 32) + resize(product4, 32);
  sum1_24 <= resize(add_temp_23, 40);

  add_temp_24 <= resize(product3, 32) + resize(product2, 32);
  sum1_25 <= resize(add_temp_24, 40);

  add_temp_25 <= resize(sum1_1, 41) + resize(sum1_2, 41);
  sum2_1 <= (39 => '0', OTHERS => '1') WHEN add_temp_25(40) = '0' AND add_temp_25(39) /= '0'
      ELSE (39 => '1', OTHERS => '0') WHEN add_temp_25(40) = '1' AND add_temp_25(39) /= '1'
      ELSE (add_temp_25(39 DOWNTO 0));

  add_temp_26 <= resize(sum1_3, 41) + resize(sum1_4, 41);
  sum2_2 <= (39 => '0', OTHERS => '1') WHEN add_temp_26(40) = '0' AND add_temp_26(39) /= '0'
      ELSE (39 => '1', OTHERS => '0') WHEN add_temp_26(40) = '1' AND add_temp_26(39) /= '1'
      ELSE (add_temp_26(39 DOWNTO 0));

  add_temp_27 <= resize(sum1_5, 41) + resize(sum1_6, 41);
  sum2_3 <= (39 => '0', OTHERS => '1') WHEN add_temp_27(40) = '0' AND add_temp_27(39) /= '0'
      ELSE (39 => '1', OTHERS => '0') WHEN add_temp_27(40) = '1' AND add_temp_27(39) /= '1'
      ELSE (add_temp_27(39 DOWNTO 0));

  add_temp_28 <= resize(sum1_7, 41) + resize(sum1_8, 41);
  sum2_4 <= (39 => '0', OTHERS => '1') WHEN add_temp_28(40) = '0' AND add_temp_28(39) /= '0'
      ELSE (39 => '1', OTHERS => '0') WHEN add_temp_28(40) = '1' AND add_temp_28(39) /= '1'
      ELSE (add_temp_28(39 DOWNTO 0));

  add_temp_29 <= resize(sum1_9, 41) + resize(sum1_10, 41);
  sum2_5 <= (39 => '0', OTHERS => '1') WHEN add_temp_29(40) = '0' AND add_temp_29(39) /= '0'
      ELSE (39 => '1', OTHERS => '0') WHEN add_temp_29(40) = '1' AND add_temp_29(39) /= '1'
      ELSE (add_temp_29(39 DOWNTO 0));

  add_temp_30 <= resize(sum1_11, 41) + resize(sum1_12, 41);
  sum2_6 <= (39 => '0', OTHERS => '1') WHEN add_temp_30(40) = '0' AND add_temp_30(39) /= '0'
      ELSE (39 => '1', OTHERS => '0') WHEN add_temp_30(40) = '1' AND add_temp_30(39) /= '1'
      ELSE (add_temp_30(39 DOWNTO 0));

  add_temp_31 <= resize(sum1_13, 41) + resize(sum1_14, 41);
  sum2_7 <= (39 => '0', OTHERS => '1') WHEN add_temp_31(40) = '0' AND add_temp_31(39) /= '0'
      ELSE (39 => '1', OTHERS => '0') WHEN add_temp_31(40) = '1' AND add_temp_31(39) /= '1'
      ELSE (add_temp_31(39 DOWNTO 0));

  add_temp_32 <= resize(sum1_15, 41) + resize(sum1_16, 41);
  sum2_8 <= (39 => '0', OTHERS => '1') WHEN add_temp_32(40) = '0' AND add_temp_32(39) /= '0'
      ELSE (39 => '1', OTHERS => '0') WHEN add_temp_32(40) = '1' AND add_temp_32(39) /= '1'
      ELSE (add_temp_32(39 DOWNTO 0));

  add_temp_33 <= resize(sum1_17, 41) + resize(sum1_18, 41);
  sum2_9 <= (39 => '0', OTHERS => '1') WHEN add_temp_33(40) = '0' AND add_temp_33(39) /= '0'
      ELSE (39 => '1', OTHERS => '0') WHEN add_temp_33(40) = '1' AND add_temp_33(39) /= '1'
      ELSE (add_temp_33(39 DOWNTO 0));

  add_temp_34 <= resize(sum1_19, 41) + resize(sum1_20, 41);
  sum2_10 <= (39 => '0', OTHERS => '1') WHEN add_temp_34(40) = '0' AND add_temp_34(39) /= '0'
      ELSE (39 => '1', OTHERS => '0') WHEN add_temp_34(40) = '1' AND add_temp_34(39) /= '1'
      ELSE (add_temp_34(39 DOWNTO 0));

  add_temp_35 <= resize(sum1_21, 41) + resize(sum1_22, 41);
  sum2_11 <= (39 => '0', OTHERS => '1') WHEN add_temp_35(40) = '0' AND add_temp_35(39) /= '0'
      ELSE (39 => '1', OTHERS => '0') WHEN add_temp_35(40) = '1' AND add_temp_35(39) /= '1'
      ELSE (add_temp_35(39 DOWNTO 0));

  add_temp_36 <= resize(sum1_23, 41) + resize(sum1_24, 41);
  sum2_12 <= (39 => '0', OTHERS => '1') WHEN add_temp_36(40) = '0' AND add_temp_36(39) /= '0'
      ELSE (39 => '1', OTHERS => '0') WHEN add_temp_36(40) = '1' AND add_temp_36(39) /= '1'
      ELSE (add_temp_36(39 DOWNTO 0));

  add_temp_37 <= resize(sum1_25, 41) + resize(product1, 41);
  sum2_13 <= (39 => '0', OTHERS => '1') WHEN add_temp_37(40) = '0' AND add_temp_37(39) /= '0'
      ELSE (39 => '1', OTHERS => '0') WHEN add_temp_37(40) = '1' AND add_temp_37(39) /= '1'
      ELSE (add_temp_37(39 DOWNTO 0));

  add_temp_38 <= resize(sum2_1, 41) + resize(sum2_2, 41);
  sum3_1 <= (39 => '0', OTHERS => '1') WHEN add_temp_38(40) = '0' AND add_temp_38(39) /= '0'
      ELSE (39 => '1', OTHERS => '0') WHEN add_temp_38(40) = '1' AND add_temp_38(39) /= '1'
      ELSE (add_temp_38(39 DOWNTO 0));

  add_temp_39 <= resize(sum2_3, 41) + resize(sum2_4, 41);
  sum3_2 <= (39 => '0', OTHERS => '1') WHEN add_temp_39(40) = '0' AND add_temp_39(39) /= '0'
      ELSE (39 => '1', OTHERS => '0') WHEN add_temp_39(40) = '1' AND add_temp_39(39) /= '1'
      ELSE (add_temp_39(39 DOWNTO 0));

  add_temp_40 <= resize(sum2_5, 41) + resize(sum2_6, 41);
  sum3_3 <= (39 => '0', OTHERS => '1') WHEN add_temp_40(40) = '0' AND add_temp_40(39) /= '0'
      ELSE (39 => '1', OTHERS => '0') WHEN add_temp_40(40) = '1' AND add_temp_40(39) /= '1'
      ELSE (add_temp_40(39 DOWNTO 0));

  add_temp_41 <= resize(sum2_7, 41) + resize(sum2_8, 41);
  sum3_4 <= (39 => '0', OTHERS => '1') WHEN add_temp_41(40) = '0' AND add_temp_41(39) /= '0'
      ELSE (39 => '1', OTHERS => '0') WHEN add_temp_41(40) = '1' AND add_temp_41(39) /= '1'
      ELSE (add_temp_41(39 DOWNTO 0));

  add_temp_42 <= resize(sum2_9, 41) + resize(sum2_10, 41);
  sum3_5 <= (39 => '0', OTHERS => '1') WHEN add_temp_42(40) = '0' AND add_temp_42(39) /= '0'
      ELSE (39 => '1', OTHERS => '0') WHEN add_temp_42(40) = '1' AND add_temp_42(39) /= '1'
      ELSE (add_temp_42(39 DOWNTO 0));

  add_temp_43 <= resize(sum2_11, 41) + resize(sum2_12, 41);
  sum3_6 <= (39 => '0', OTHERS => '1') WHEN add_temp_43(40) = '0' AND add_temp_43(39) /= '0'
      ELSE (39 => '1', OTHERS => '0') WHEN add_temp_43(40) = '1' AND add_temp_43(39) /= '1'
      ELSE (add_temp_43(39 DOWNTO 0));

  add_temp_44 <= resize(sum3_1, 41) + resize(sum3_2, 41);
  sum4_1 <= (39 => '0', OTHERS => '1') WHEN add_temp_44(40) = '0' AND add_temp_44(39) /= '0'
      ELSE (39 => '1', OTHERS => '0') WHEN add_temp_44(40) = '1' AND add_temp_44(39) /= '1'
      ELSE (add_temp_44(39 DOWNTO 0));

  add_temp_45 <= resize(sum3_3, 41) + resize(sum3_4, 41);
  sum4_2 <= (39 => '0', OTHERS => '1') WHEN add_temp_45(40) = '0' AND add_temp_45(39) /= '0'
      ELSE (39 => '1', OTHERS => '0') WHEN add_temp_45(40) = '1' AND add_temp_45(39) /= '1'
      ELSE (add_temp_45(39 DOWNTO 0));

  add_temp_46 <= resize(sum3_5, 41) + resize(sum3_6, 41);
  sum4_3 <= (39 => '0', OTHERS => '1') WHEN add_temp_46(40) = '0' AND add_temp_46(39) /= '0'
      ELSE (39 => '1', OTHERS => '0') WHEN add_temp_46(40) = '1' AND add_temp_46(39) /= '1'
      ELSE (add_temp_46(39 DOWNTO 0));

  add_temp_47 <= resize(sum4_1, 41) + resize(sum4_2, 41);
  sum5_1 <= (39 => '0', OTHERS => '1') WHEN add_temp_47(40) = '0' AND add_temp_47(39) /= '0'
      ELSE (39 => '1', OTHERS => '0') WHEN add_temp_47(40) = '1' AND add_temp_47(39) /= '1'
      ELSE (add_temp_47(39 DOWNTO 0));

  add_temp_48 <= resize(sum4_3, 41) + resize(sum2_13, 41);
  sum5_2 <= (39 => '0', OTHERS => '1') WHEN add_temp_48(40) = '0' AND add_temp_48(39) /= '0'
      ELSE (39 => '1', OTHERS => '0') WHEN add_temp_48(40) = '1' AND add_temp_48(39) /= '1'
      ELSE (add_temp_48(39 DOWNTO 0));

  add_temp_49 <= resize(sum5_1, 41) + resize(sum5_2, 41);
  sum6_1 <= (39 => '0', OTHERS => '1') WHEN add_temp_49(40) = '0' AND add_temp_49(39) /= '0'
      ELSE (39 => '1', OTHERS => '0') WHEN add_temp_49(40) = '1' AND add_temp_49(39) /= '1'
      ELSE (add_temp_49(39 DOWNTO 0));

  output_typeconvert <= (15 => '0', OTHERS => '1') WHEN sum6_1(39) = '0' AND sum6_1(38 DOWNTO 15) /= "000000000000000000000000"
      ELSE (15 => '1', OTHERS => '0') WHEN sum6_1(39) = '1' AND sum6_1(38 DOWNTO 15) /= "111111111111111111111111"
      ELSE (sum6_1(15 DOWNTO 0));

  Output_Register_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      output_register <= (OTHERS => '0');
    ELSIF clk'event AND clk = '1' THEN
      IF clk_enable = '1' THEN
        output_register <= output_typeconvert;
      END IF;
    END IF; 
  END PROCESS Output_Register_process;

  -- Assignment Statements
  data_out <= std_logic_vector(output_register);
END rtl;
